% !TeX spellcheck = ru_RU
@incollection{koznov,
  author   = { Д.~В.~Кознов},
  title    = {Слайды Д.~В.~Кознова},
  url      = {https://drive.google.com/drive/folders/1yyhnycFC-LpT6d6aIy9-lW7dM8lWkL7w?usp=sharing},
  urldate  = {\DTMdate{2013-05-16}},
  language = {russian}
}
@inproceedings{10.1007/3-540-51084-2_9,
  author    = {Abdali, S. Kamal
               and Wise, David S.},
  editor    = {Gianni, P.},
  title     = {Experiments with quadtree representation of matrices},
  booktitle = {Symbolic and Algebraic Computation},
  year      = {1989},
  publisher = {Springer Berlin Heidelberg},
  address   = {Berlin, Heidelberg},
  pages     = {96--108},
  abstract  = {The quadtrees matrix representation has been recently proposed as an alternative to the conventional linear storage of matrices. If all elements of a matrix are zero, then the matrix is represented by an empty tree; otherwise it is represented by a tree consisting of four subtrees, each representing, recursively, a quadrant of the matrix. Using four-way block decomposition, algorithms on quadtrees accelerate on blocks entirely of zeroes, and thereby offer improved performance on sparse matrices. This paper reports the results of experiments done with a quadtree matrix package implemented in REDUCE to compare the performance of quadtree representation with REDUCE's built-in sequential representation of matrices. Tests on addition, multiplication, and inversion of dense, triangular, tridiagonal, and diagonal matrices (both symbolic and numeric) of sizes up to 100{\texttimes}100 show that the quadtree algorithms perform well in a broad range of circumstances, sometimes running orders of magnitude faster than their sequential counterparts.},
  isbn      = {978-3-540-46153-1}
}
@inproceedings{distillation,
  author    = {Hamilton, G. W.},
  editor    = {Pnueli, Amir
               and Virbitskaite, Irina
               and Voronkov, Andrei},
  title     = {Extracting the Essence of Distillation},
  booktitle = {Perspectives of Systems Informatics},
  year      = {2010},
  publisher = {Springer Berlin Heidelberg},
  address   = {Berlin, Heidelberg},
  pages     = {151--164},
  abstract  = {In this paper, we give a re-formulation of our previously defined distillation algorithm, which can automatically transform higher-order functional programs into equivalent tail-recursive programs. Our re-formulation simplifies the presentation of the transformation and hopefully makes it easier to understand. Using distillation, it is possible to produce superlinear improvement in the run-time of programs. This represents a significant advance over deforestation, partial evaluation and positive supercompilation, which can only produce a linear improvement.},
  isbn      = {978-3-642-11486-1}
}
